{"version":3,"sources":["assets/icon.png","database/firebase.js","screens/ChatScreen.js","screens/AccountScreen.js","screens/HomeScreen.js","screens/LoginScreen.js","screens/SignupScreen.js","App.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","stores","storage","storis","auth","ChatScreen","user","route","useState","messages","setMessages","uid","params","useEffect","docid","unSubscribe","collection","doc","orderBy","onSnapshot","querySnap","allmsg","docs","map","docSanp","data","createdAt","toDate","Date","View","style","flex","backgroundColor","onSend","text","messageArray","mymsg","sentBy","sentTo","previousMessages","GiftedChat","append","add","_id","renderBubble","props","wrapperStyle","right","renderInputToolbar","containerStyle","borderTopWidth","borderTopColor","textInputStyle","color","AccountScreen","profile","setProfile","get","then","docSnap","styles","container","Image","img","source","uri","pic","Text","name","flexDirection","Feather","size","marginLeft","email","Button","btn","mode","onPress","update","signOut","StyleSheet","create","alignItems","justifyContent","width","height","borderRadius","borderWidth","borderColor","fontSize","HomeScreen","navigation","userss","setUserss","searchTerm","setSearchTerm","searchUser","filter","item","toLowerCase","indexOf","a","async","where","querySanp","allusers","getUsers","Searchbar","placeholder","onChangeText","value","TouchableOpacity","navigate","status","toString","mycard","FAB","fab","icon","ActivityIndicator","margin","padding","borderBottomWidth","borderBottomColor","position","bottom","SignupScreen","setEmail","password","setPassword","loading","setLoading","KeyboardAvoidingView","behavior","box1","require","box2","TextInput","label","secureTextEntry","alert","signInWithEmailAndPassword","textAlign","paddingHorizontal","setName","image","setImage","url","state","setUploading","showNext","setShowNext","userSignup","createUserWithEmailAndPassword","result","set","Platform","OS","ImagePicker","console","log","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","pickImage","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","TypeError","responseType","open","send","blob","ref","child","toISOString","snapshot","put","on","TaskEvent","STATE_CHANGED","error","close","getDownloadURL","uploadImage","goBack","Stack","createStackNavigator","Navigation","setuser","unregister","onAuthStateChanged","userExist","NavigationContainer","Navigator","screenOptions","headerTintColor","Screen","options","title","headerRight","avatar","rounded","component","LoginScreen","headerShown","marginRight","App","StatusBar","barStyle","registerRootComponent"],"mappings":"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","file":"static/js/app.221942ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.ef3567b5.png\";","import firebase from \"firebase\";\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAHatqlMkgwtBwFSrIMA5o2rzmzjtBHllo\",\r\n    authDomain: \"react-native-firebase-2d7aa.firebaseapp.com\",\r\n    projectId: \"react-native-firebase-2d7aa\",\r\n    storageBucket: \"react-native-firebase-2d7aa.appspot.com\",\r\n    messagingSenderId: \"206190794167\",\r\n    appId: \"1:206190794167:web:5d1de8a6eaff002e674432\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore()\r\nconst stores = firebase.storage()\r\nconst storis = firebase.storage\r\nconst auth = firebase.auth();\r\nexport default {\r\n    firebase,\r\n    db,\r\n    stores,\r\n    auth,\r\n    storis\r\n};\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { View, Text, Image } from 'react-native'\r\nimport { GiftedChat, Bubble, InputToolbar } from 'react-native-gifted-chat'\r\nimport firebase from '../database/firebase';\r\nexport default function ChatScreen({ user, route }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const { uid } = route.params;\r\n  const getAllMessages = async () => {\r\n    const docid = uid > user.uid ? user.uid + \"-\" + uid : uid + \"-\" + user.uid\r\n    const querySanp = await firebase.db.collection('chatrooms')\r\n      .doc(docid)\r\n      .collection('messages')\r\n      .orderBy('createdAt', \"desc\")\r\n      .get()\r\n    const allmsg = querySanp.docs.map(docSanp => {\r\n      return {\r\n        ...docSanp.data(),\r\n        createdAt: docSanp.data().createdAt.toDate()\r\n      }\r\n    })\r\n    setMessages(allmsg)\r\n  }\r\n  useEffect(() => {\r\n    const docid = uid > user.uid ? user.uid + \"-\" + uid : uid + \"-\" + user.uid\r\n    const messageRef = firebase.db.collection('chatrooms')\r\n      .doc(docid)\r\n      .collection('messages')\r\n      .orderBy('createdAt', \"desc\")\r\n    const unSubscribe = messageRef.onSnapshot((querySnap) => {\r\n      const allmsg = querySnap.docs.map(docSanp => {\r\n        const data = docSanp.data()\r\n        if (data.createdAt) {\r\n          return {\r\n            ...docSanp.data(),\r\n            createdAt: docSanp.data().createdAt.toDate()\r\n          }\r\n        } else {\r\n          return {\r\n            ...docSanp.data(),\r\n            createdAt: new Date()\r\n          }\r\n        }\r\n      })\r\n      setMessages(allmsg)\r\n    })\r\n    return () => {\r\n      unSubscribe()\r\n    }\r\n  }, [])\r\n\r\n  const onSend = (messageArray) => {\r\n    const msg = messageArray[0]\r\n    const mymsg = {\r\n      ...msg,\r\n      sentBy: user.uid,\r\n      sentTo: uid,\r\n      createdAt: new Date()\r\n    }\r\n    setMessages(previousMessages => GiftedChat.append(previousMessages, mymsg))\r\n    const docid = uid > user.uid ? user.uid + \"-\" + uid : uid + \"-\" + user.uid\r\n\r\n    firebase.db.collection('chatrooms')\r\n      .doc(docid)\r\n      .collection('messages')\r\n      .add({ ...mymsg })\r\n  }\r\n  return (\r\n    <View style={{ flex: 1, backgroundColor: \"#f5f5f5\" }}>\r\n      <GiftedChat\r\n        messages={messages}\r\n        onSend={text => onSend(text)}\r\n        user={{\r\n          _id: user.uid,\r\n        }}\r\n        renderBubble={(props) => {\r\n          return <Bubble\r\n            {...props}\r\n            wrapperStyle={{\r\n              right: {\r\n                backgroundColor: \"green\",\r\n              }\r\n            }}\r\n          />\r\n        }}\r\n\r\n        renderInputToolbar={(props) => {\r\n          return <InputToolbar {...props}\r\n            containerStyle={{ borderTopWidth: 1.5, borderTopColor: 'green' }}\r\n            textInputStyle={{ color: \"black\" }}\r\n          />\r\n        }}\r\n\r\n      />\r\n    </View>\r\n  )\r\n}","import React,{useEffect,useState} from 'react'\r\nimport { View, Text,ActivityIndicator ,StyleSheet,Image} from 'react-native'\r\nimport firebase from '../database/firebase'\r\nimport Feather from 'react-native-vector-icons/Feather'\r\nimport {Button} from 'react-native-paper'\r\nimport { Input } from 'react-native-elements/dist/input/Input'\r\nexport default function AccountScreen({user}) {\r\n     const [profile,setProfile] = useState('')\r\n\r\n     useEffect(()=>{\r\n        firebase.db.collection('users').doc(user.uid).get().then(docSnap=>{\r\n           setProfile(docSnap.data())\r\n        })\r\n        },[])\r\n     \r\n    return (\r\n        <View style={styles.container}>\r\n            <Image style={styles.img} source={{uri:profile.pic}} />\r\n            <Text style={styles.text}>Name: {profile.name}</Text>\r\n            <View style={{flexDirection:\"row\"}}>\r\n                <Feather name=\"mail\" size={30} color=\"white\" />\r\n                <Text style={[styles.text,{marginLeft:10}]}>{profile.email}</Text>\r\n            </View>\r\n            <Button\r\n                style={styles.btn}\r\n                mode=\"contained\"\r\n                onPress={()=>{\r\n                    firebase.db.collection('users')\r\n                    .doc(user.uid)\r\n                    .update({                    \r\n                    }).then(()=>{\r\n                         firebase.auth.signOut()\r\n                    })\r\n                }}\r\n            >Logout</Button>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        backgroundColor:\"green\",\r\n        alignItems:\"center\",\r\n        justifyContent:\"space-evenly\"\r\n    },\r\n    img:{\r\n        width:200,\r\n        height:200,\r\n        borderRadius:100,\r\n        borderWidth:3,\r\n        borderColor:\"white\"\r\n    },\r\n    text:{\r\n        fontSize:23,\r\n        color:\"white\"\r\n    },\r\n    btn:{\r\n        borderColor:\"white\",\r\n        borderWidth:3\r\n    }\r\n})","import React,{useState,useEffect} from 'react'\r\nimport { View, Text ,Image,FlatList,StyleSheet,TouchableOpacity,ActivityIndicator} from 'react-native'\r\nimport firebase from '../database/firebase';\r\nimport {FAB, Searchbar} from 'react-native-paper'\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\nexport default function HomeScreen({user,navigation}) {\r\n   // console.log(user)\r\n    const [users,setUsers] = useState(null)\r\n    const [userss, setUserss] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const getUsers = async ()=>{\r\n             const querySanp = await firebase.db.collection('users').where('uid','!=',user.uid).get()\r\n             const allusers = querySanp.docs.map(docSnap=>docSnap.data())\r\n            //  console.log(allusers)\r\n             setUserss(allusers)\r\n    }\r\n\r\n    const searchUser= userss.filter((item)=>{\r\n        return item.name.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1\r\n\r\n    })\r\n\r\n    useEffect(()=>{\r\n        getUsers()\r\n    },[])\r\n    if(!userss){\r\n        return  <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n    }\r\n    return (\r\n        <>\r\n        <Searchbar\r\n                    placeholder=\"Search...\"\r\n                    onChangeText={(value)=>setSearchTerm(value)}/>\r\n                    <KeyboardAwareScrollView>\r\n    {searchUser.map(item => {\r\n          return (\r\n              <TouchableOpacity onPress={()=>navigation.navigate('chat',{name:item.name,uid:item.uid,\r\n                status :typeof(item.status) ==\"string\"? item.status : item.status.toDate().toString(),\r\n                pic:item.pic\r\n            })}>\r\n              <View style={styles.mycard}>\r\n                <Image source={{uri:item.pic}} style={styles.img}/>\r\n                  <View>\r\n                      <Text style={styles.text}>\r\n                          {item.name}\r\n                      </Text>\r\n                      <Text style={styles.text}>\r\n                          {item.email}\r\n                      </Text>\r\n                  </View>\r\n              </View>\r\n              </TouchableOpacity>\r\n          )\r\n    })}\r\n    </KeyboardAwareScrollView>                  \r\n             <FAB\r\n                style={styles.fab}\r\n                icon=\"face-profile\"\r\n                color=\"black\"\r\n                onPress={() => navigation.navigate(\"account\")}\r\n            />        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n   img:{width:60,height:60,borderRadius:30,backgroundColor:\"green\"},\r\n   text:{\r\n       fontSize:18,\r\n       marginLeft:15,\r\n   },\r\n   mycard:{\r\n       flexDirection:\"row\",\r\n       margin:3,\r\n       padding:4,\r\n       backgroundColor:\"white\",\r\n       borderBottomWidth:1,\r\n       borderBottomColor:'grey'\r\n   },\r\n   fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor:\"white\"\r\n  },\r\n });","import React, { useState } from 'react'\r\nimport { View, Text, Image, StyleSheet, KeyboardAvoidingView, TouchableOpacity, ActivityIndicator } from 'react-native'\r\nimport { TextInput, Button} from 'react-native-paper';\r\nimport firebase from '../database/firebase';\r\nexport default function SignupScreen({ navigation }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    if (loading) {\r\n        return <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n    }\r\n    const userLogin = async () => {\r\n        setLoading(true)\r\n        if (!email || !password) {\r\n            alert(\"please add all the field\")\r\n            return\r\n        }\r\n        try {\r\n            const result = await firebase.auth.signInWithEmailAndPassword(email, password)\r\n            setLoading(false)\r\n        } catch (err) {\r\n            alert(\"something went wrong\")\r\n        }\r\n    }\r\n    return (\r\n        <KeyboardAvoidingView behavior=\"position\">\r\n            <View style={styles.box1}>\r\n                <Text style={styles.text}>Bienvenido a Mss App</Text>\r\n                <Image style={styles.img} source={require('../assets/icon.png')} />\r\n            </View>\r\n            <View style={styles.box2}>\r\n                <TextInput\r\n                    label=\"Email\"\r\n                    mode=\"outlined\"\r\n                    value={email}\r\n                    onChangeText={(text) => setEmail(text)}\r\n                    \r\n                />\r\n                <TextInput\r\n                    label=\"password\"\r\n                    mode=\"outlined\"\r\n                    value={password}\r\n                    onChangeText={(text) => setPassword(text)}\r\n                    secureTextEntry\r\n                />\r\n                <Button\r\n                    mode=\"contained\"\r\n                    onPress={() => userLogin()}>Login\r\n                </Button>\r\n                <TouchableOpacity onPress={() => navigation.navigate('signup')}>\r\n                    <Text style={{ textAlign: \"center\" }}>\r\n                        Dont have an account ?\r\n                    </Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        fontSize: 22,\r\n        color: \"green\",\r\n        margin: 10\r\n    },\r\n    img: {\r\n        width: 200,\r\n        height: 200\r\n    },\r\n    box1: {\r\n        alignItems: \"center\"\r\n    },\r\n    box2: {\r\n        paddingHorizontal: 40,\r\n        justifyContent: \"space-evenly\",\r\n        height: \"50%\"\r\n    }\r\n});","import React, { useState, useEffect } from 'react'\r\nimport { View, Text, Image, StyleSheet, KeyboardAvoidingView, TouchableOpacity, ActivityIndicator,Platform } from 'react-native'\r\nimport { TextInput, Button } from 'react-native-paper';\r\nimport * as ImagePicker from 'expo-image-picker'\r\nimport firebase from '../database/firebase';\r\nimport * as Firebase from \"firebase\"\r\nexport default function SignupScreen({ navigation }) {\r\n    const [email, setEmail] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [state, setState] = useState({\r\n        url:\"\"\r\n    })\r\n    const [uploading, setUploading] = useState(false)\r\n    const [showNext, setShowNext] = useState(false)\r\n   const [loading, setLoading] = useState(false)\r\n   /* */   \r\n    const userSignup = async () => {\r\n       setLoading(true)\r\n        if (!email || !password /*|| !image */|| !name) {\r\n            alert(\"please add all the field\")\r\n            return\r\n        }\r\n        try {\r\n            const result = await firebase.auth.createUserWithEmailAndPassword(email, password)\r\n            firebase.db.collection('users').doc(result.user.uid).set({\r\n                name: name,\r\n                email: result.user.email,\r\n                uid: result.user.uid,\r\n                pic: state.url,\r\n                status: \"online\"\r\n            })\r\n            setLoading(false)\r\n        } catch (err) {\r\n            alert(\"something went wrong\")\r\n        }\r\n        if (loading) {\r\n            return <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        (async () => {\r\n          if (Platform.OS !== 'web') {\r\n            const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n            if (status !== 'granted') {\r\n              alert('Sorry, we need camera roll permissions to make this work!');\r\n            }\r\n          }\r\n        })();\r\n      }, []);\r\n\r\n    const pickImage = async () => {\r\n        console.log('funciano')\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n            allowsEditing: true,\r\n            aspect: [4, 4],\r\n            quality: 1,\r\n            \r\n        });\r\n        console.log(result);\r\n        if (!result.cancelled) {\r\n            setImage(result.uri);\r\n            \r\n        }\r\n    };\r\n\r\n\r\n    const uploadImage = async () => {\r\n        const blob = await new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onload = function () {\r\n                resolve(xhr.response);\r\n            };\r\n            xhr.onerror = function () {\r\n                reject(new TypeError('Network request failed'));\r\n\r\n            };\r\n\r\n            xhr.responseType = 'blob';\r\n            xhr.open('GET', image, true);\r\n            xhr.send(null);\r\n        });\r\n\r\n        const ref = firebase.stores.ref().child(new Date().toISOString())\r\n        const snapshot = ref.put(blob)\r\n\r\n        snapshot.on(firebase.storis.TaskEvent.STATE_CHANGED, () => {\r\n            setUploading(true)\r\n        }, (error) => {\r\n            setUploading(false)\r\n            console.log(error);\r\n            blob.close()\r\n            return\r\n        },\r\n            () => {\r\n                snapshot.snapshot.ref.getDownloadURL().then((url) => {\r\n                    setUploading(false)\r\n                    console.log(\"download url: \", url)\r\n                    //blob.close();\r\n                    state.url=(url) \r\n                    userSignup()                                      \r\n                    return url;\r\n                })\r\n\r\n            }\r\n        )\r\n        }\r\n        return (\r\n            <KeyboardAvoidingView behavior=\"position\">\r\n                <View style={styles.box1}>\r\n                    <Text style={styles.text}>Welcome to Whatsapp 5.0</Text>\r\n                    <Image style={styles.img} source={require('../assets/icon.png')} />\r\n                </View>\r\n                <View style={styles.box2}>\r\n                    {!showNext &&\r\n                        <>\r\n                            <TextInput\r\n                                label=\"Email\"\r\n                                value={email}\r\n                                onChangeText={(text) => setEmail(text)}\r\n                                mode=\"outlined\"\r\n                            />\r\n                            <TextInput\r\n                                label=\"password\"\r\n                                mode=\"outlined\"\r\n                                value={password}\r\n                                onChangeText={(text) => setPassword(text)}\r\n                                secureTextEntry\r\n                            />\r\n                        </>\r\n                    }\r\n\r\n                    {showNext ?\r\n                        <>\r\n                            <TextInput\r\n                                label=\"Name\"\r\n                                value={name}\r\n                                onChangeText={(text) => setName(text)}\r\n                                mode=\"outlined\"\r\n                            />\r\n                            <Button\r\n                                mode=\"contained\"\r\n                                onPress={() => pickImage()}\r\n                            >select profile pic</Button>\r\n                            <Button\r\n                                mode=\"contained\"\r\n                                // disabled={image?false:true}\r\n                                onPress={() => uploadImage()}\r\n                            >Signup</Button>\r\n                        </>\r\n                        :\r\n                        <Button\r\n                            mode=\"contained\"\r\n                            onPress={() => setShowNext(true)}\r\n                        >Next</Button>\r\n                    }\r\n\r\n                    <TouchableOpacity onPress={() => navigation.goBack()}><Text style={{ textAlign: \"center\" }}>Already have an account ?</Text></TouchableOpacity>\r\n                </View>\r\n            </KeyboardAvoidingView>\r\n        )\r\n    }\r\n\r\n\r\n    const styles = StyleSheet.create({\r\n        text: {\r\n            fontSize: 22,\r\n            color: \"green\",\r\n            margin: 10\r\n        },\r\n        img: {\r\n            width: 200,\r\n            height: 200\r\n        },\r\n        box1: {\r\n            alignItems: \"center\"\r\n        },\r\n        box2: {\r\n            paddingHorizontal: 40,\r\n            justifyContent: \"space-evenly\",\r\n            height: \"50%\"\r\n        }\r\n    });","\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, Navigator, LogBox,StatusBar,Platform } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport firebase from './database/firebase'\nimport { Avatar } from 'react-native-elements';\n\nimport ChatScreen from './screens/ChatScreen';\nimport AccountScreen from './screens/AccountScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/LoginScreen'\nimport SignupScreen from './screens/SignupScreen'\n\n\nconst Stack = createStackNavigator();\n\nconst Navigation = ()=>{\n  const [user,setuser] = useState('')\n  useEffect(()=>{\n   const unregister =  firebase.auth.onAuthStateChanged(userExist=>{\n      if(userExist){\n       \n        firebase.db.collection('users')\n        .doc(userExist.uid)\n        .update({\n          status:\"online\"\n        })\n        setuser(userExist)\n\n\n      } \n \n      else setuser(\"\")\n    })\n\n    return ()=>{\n      unregister()\n    }\n\n  },[])\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n       screenOptions={{\n         headerTintColor:\"green\"\n       }}\n      \n      >\n        {user?\n        <>\n        <Stack.Screen name=\"home\"  options={{\n          title:\"MssApp\"}}> \n         {props => <HomeScreen {...props}  user={user} />}\n        </Stack.Screen>\n        <Stack.Screen name=\"chat\" options={({ route }) => ({ title:<View style={styles.title}><Text>{route.params.name}</Text><Text>{route.params.status}</Text></View>,\n       headerRight:() => (\n        <View style={styles.avatar} >\n          <Avatar\n            rounded\n            source={{uri:route.params.pic}}/>\n        </View>\n\n      )})}>\n          {props => <ChatScreen {...props} user={user} /> }\n        </Stack.Screen>\n        <Stack.Screen name=\"account\">\n          {props => <AccountScreen {...props} user={user}/> }\n        </Stack.Screen>\n        </>\n        :\n        <>\n        <Stack.Screen name=\"login\" component={LoginScreen} options={{headerShown:false}}/>\n        <Stack.Screen name=\"signup\" component={SignupScreen} options={{headerShown:false}}/>\n        </>\n        }\n        \n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\n\n\nconst App = () => {\n\n\n  return (\n    <>\n     \n      <StatusBar barStyle=\"light-content\" backgroundColor=\"green\" />\n       <View style={styles.container}>\n         <Navigation />\n       </View>\n      \n\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n   container:{\n     flex:1,\n     backgroundColor:\"white\"\n   },\n   avatar:{\n     marginRight: 20\n\n   },\n   title:{\n    //marginLeft: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n\n   }\n});\n\nexport default App;\n","import 'react-native-gesture-handler';\nimport { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}